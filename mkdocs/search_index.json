{
    "docs": [
        {
            "location": "/",
            "text": "Quick Start\n\n\nIntroduction\n\n\nChromatin immunoprecipitation combined with high-throughput sequencing (ChIP-seq) can be used to map binding sites of a protein of interest in the genome. Histone modifications usually occupy broad chromatin domains and result in diffuse patterns in ChIP-seq data that make it difficult to identify signal enrichment. SICER, a spatial clustering approach for the identification of ChIP-enriched regions, was developed for calling broad peaks from ChIP-seq data. \n\n\nUsability of the original SICER software has been affected by increased throughputs of ChIP-seq experiments over the years. We now present SICER2 a more user-friendly version of SICER that has been redisgned and streamlined to handle large ChIP-seq data sets. This new Python package supports multiple job submissions on cluster systems and parallel processing on multicore architectures.\n\n\nFor more information about the original SICER algorithm, please see\n\n\n\u201c\nA clustering approach for identification of enriched domains from histone modification\n ChIP-Seq data\n\" Chongzhi Zang, Dustin E. Schones, Chen Zeng, Kairong Cui, Keji Zhao, and\n Weiqun Peng, \nBioinformatics\n 25, 1952 - 1958 (2009)\n\n\nIn addition, we present an alternative algorithm for identification of broad domains from ChIP-seq data called RECOGNICER.\n\n\n(More detail about RECOGNICER TBD)\n\n\nInstallation\n\n\nQuick Installation\n\n\nEasiest way to install SICER2 is through \npip\n. Simply open the terminal and type \npip install SICER2\n.\n\n\nRequirements\n\n\nPython Version\n\n\nUnlike the original version of SICER, SICER2 runs in Python 3.\nPlease use Python 3 to install and run SICER 2.0.\n\n\nLibraries\n\n\nNumpy and Scipy are required to run SICER2. Please have these installed before installing SICER2.\nThis can be done by simply typing \npip install numpy scipy\n under command line (if python2.7 is your default python version, use \npip3\n).\n\n\nC Compiler\n\n\nC compiler is required to compile C codes that are part of the SICER2 package. This also means that python header files (e.g. Python.h) are needed. For Linux users, make sure to have python-dev installed. For Mac OS X users, it is recommended that you install Xcode.\n\n\nBedTools\n\n\nLastly, if you would like to directly pass BAM files as input files for SICER2, you need to have \nbedtools\n installed. Please refer to this \nlink\n for more details on installing bedtools. This is not required if you will intend to only pass BED files as input files.\n\n\nOther Installations\n\n\nFor local installation, the source distribution file is available at Zang Lab website (\nlink\n)\n\n\nUsing SICER2\n\n\nThe terminal command to run SICER is \nsicer\n. The command to run RECOGNICER is \nrecognicer\n.\n\n\nBoth \nsicer\n command and \nrecognicer\n command take several flag-based arguments as inputs. Two arguments are required: (1) name/path of treatment file, (2) species of reference genome. Arguments for each command are explained below.\n\n\nSICER Arguments\n\n\n-t/--treatment_file (Required)\n\n\nThe file must either be in BED or BAM format (note that you need \nbedtools\n installed to directly enter BAM files).\nThe file name can either the relative path or the absolute path of the file.\n\n\n-c/--control_file (Optional)\n\n\nLike the treatment file, control file must be in BED or BAM format and can be the relative path or the absolute path of the file. However, control library input is optional.\n\n\n-s/--species (Required)\n\n\nex) \n-s hg38\n\n\n-rt/--redundancy_threshold (Optional)\n\n\nThe number of copies of indentical reads allowed in a library. Default value is 1\n\n\n-w/--window_size (Optional)\n\n\nResolution of SICER. Default value is 200 (bp)\n\n\n-f/--fragment_size (Optional)\n\n\nThe amount of shift from the beginning of a read to the center of the DNA fragment represented by the read.\nDefault value is 150 (bp).\n\n\n-egf/--effective_genome_faction (Optional)\n\n\nEffective genome as fraction of the genome size. Default value is 0.74.\n\n\n-fdr/--false_discovery_rate (Optional)\n\n\nRemove all islands with an false-discovery-rate below cutoff. Default value is 0.01.\n\n\n-g/--gap_size (Optional)\n\n\nThe minimum length of a \"gap\" such that neighboring window is an \"island.\"\nPlease note that this value must be a multiple of the window size.\nDefault value is 600 (bp).\n\n\n-e/--e_value (Optional)\n\n\nE-value. Requires user input when no control library is provided. Default value is 1000\n\n\n-o/--output_directory (Optional)\n\n\nPath of the directory in which results will be stored. Default output directory is the current working directory.\n\n\n-cpu/--cpu (Optional)\n\n\nThe number of CPU cores SICER program will use when executing multi-processing tasks. Optimal number of cores is the species' number of chromosomes. Default value is the maximum number of cores avaiable in the system.\n\n\n--significant_reads (Optional)\n\n\nSignificant Reads: Type \"--significant_reads\" flag to have SICER produce a BED file of treatment reads filtered by significant islands and WIG file of filtered reads binned into windows.\n\n\nRECOGNICER Arguments\n\n\nAll of the arguments for RECOGNICER are identical to those of SICER except for \ngap_size\n and \ne_value\n.\nInstead of these two arguments, RECOGNICER has two arguments called \nstep_size\n and \nstep_score\n.\n\n\n-s_size/--step_size (Optional)\n\n\nThe number of windows in one graining unit. Default value is 3.\n\n\n-s_score/--step_score (Optional)\n\n\nThe minimum number of positive elements in the graining unit to call the unit positive. Default value is 2.\n\n\nUsing SICER2 for differential peak calling\n\n\nThe commands for differential peak calling are \nsicer_df\n and \nrecognicer_df\n.  \n\n\nArguments\n\n\nThe arguments for both SICER and RECOGNICER differential peak calling are identical to those of the regular peak callings except for the following arguments specified below.\n\n\nAlso, differential peak calling has one additional argument called \n----false_discovery_rate_df\n\n\n-t/--treatment_file (Required)\n\n\nTwo files must be given as input. The first file must be the knockout (KO) file and the second file must be the wild-type (WT) file.\nBoth files must either be in BED or BAM format.\n\n\n-c/--control_file (Optional)\n\n\nWhile optional, two files must be given as input if you decide to provide the input. The first file must be the control library corresponding to the knockout (KO) treatment file and the second file must be the control library corresponding to the wild-type (WT) treatment file. Both files must either be in BED or BAM format.\n\n\n-fdr_df/--false_discovery_rate_df (Optional)\n\n\nCutoff for identification of significant changes been wild-type library and knockout library. Default value is 0.01.\n\n\nExample Use\n\n\n\n\nCalling SICER with a control library.\n\nDefault parameters are explicitly entered for the sake of demonstration.\n\n\n\n\nsicer -t treatment.bed -c control.bed -s hg38 -w 200 -rt 1 -f 150 -egf 0.74 -fdr 0.01 -g 600 -e 1000\n\n\n\n\nCalling SICER without a control library\n\n\n\n\nsicer -t treatment.bed -s hg38\n\n\n\n\nCalling SICER with control libraries for differential peak calling.\n\n\n\n\nsicer_df -t treatment1.bed treatment2.bed -c control1.bed control2.bed -s hg38\n\n\n\n\nCalling SICER without control libraries for differential peak calling.\n\n\n\n\nsicer_df -t treatment1.bed treatment2.bed -s hg38",
            "title": "Quick Start"
        },
        {
            "location": "/#quick-start",
            "text": "",
            "title": "Quick Start"
        },
        {
            "location": "/#introduction",
            "text": "Chromatin immunoprecipitation combined with high-throughput sequencing (ChIP-seq) can be used to map binding sites of a protein of interest in the genome. Histone modifications usually occupy broad chromatin domains and result in diffuse patterns in ChIP-seq data that make it difficult to identify signal enrichment. SICER, a spatial clustering approach for the identification of ChIP-enriched regions, was developed for calling broad peaks from ChIP-seq data.   Usability of the original SICER software has been affected by increased throughputs of ChIP-seq experiments over the years. We now present SICER2 a more user-friendly version of SICER that has been redisgned and streamlined to handle large ChIP-seq data sets. This new Python package supports multiple job submissions on cluster systems and parallel processing on multicore architectures.  For more information about the original SICER algorithm, please see  \u201c A clustering approach for identification of enriched domains from histone modification\n ChIP-Seq data \" Chongzhi Zang, Dustin E. Schones, Chen Zeng, Kairong Cui, Keji Zhao, and\n Weiqun Peng,  Bioinformatics  25, 1952 - 1958 (2009)  In addition, we present an alternative algorithm for identification of broad domains from ChIP-seq data called RECOGNICER.  (More detail about RECOGNICER TBD)",
            "title": "Introduction"
        },
        {
            "location": "/#installation",
            "text": "Quick Installation  Easiest way to install SICER2 is through  pip . Simply open the terminal and type  pip install SICER2 .  Requirements  Python Version  Unlike the original version of SICER, SICER2 runs in Python 3.\nPlease use Python 3 to install and run SICER 2.0.  Libraries  Numpy and Scipy are required to run SICER2. Please have these installed before installing SICER2.\nThis can be done by simply typing  pip install numpy scipy  under command line (if python2.7 is your default python version, use  pip3 ).  C Compiler  C compiler is required to compile C codes that are part of the SICER2 package. This also means that python header files (e.g. Python.h) are needed. For Linux users, make sure to have python-dev installed. For Mac OS X users, it is recommended that you install Xcode.  BedTools  Lastly, if you would like to directly pass BAM files as input files for SICER2, you need to have  bedtools  installed. Please refer to this  link  for more details on installing bedtools. This is not required if you will intend to only pass BED files as input files.  Other Installations  For local installation, the source distribution file is available at Zang Lab website ( link )",
            "title": "Installation"
        },
        {
            "location": "/#using-sicer2",
            "text": "The terminal command to run SICER is  sicer . The command to run RECOGNICER is  recognicer .  Both  sicer  command and  recognicer  command take several flag-based arguments as inputs. Two arguments are required: (1) name/path of treatment file, (2) species of reference genome. Arguments for each command are explained below.  SICER Arguments  -t/--treatment_file (Required)  The file must either be in BED or BAM format (note that you need  bedtools  installed to directly enter BAM files).\nThe file name can either the relative path or the absolute path of the file.  -c/--control_file (Optional)  Like the treatment file, control file must be in BED or BAM format and can be the relative path or the absolute path of the file. However, control library input is optional.  -s/--species (Required)  ex)  -s hg38  -rt/--redundancy_threshold (Optional)  The number of copies of indentical reads allowed in a library. Default value is 1  -w/--window_size (Optional)  Resolution of SICER. Default value is 200 (bp)  -f/--fragment_size (Optional)  The amount of shift from the beginning of a read to the center of the DNA fragment represented by the read.\nDefault value is 150 (bp).  -egf/--effective_genome_faction (Optional)  Effective genome as fraction of the genome size. Default value is 0.74.  -fdr/--false_discovery_rate (Optional)  Remove all islands with an false-discovery-rate below cutoff. Default value is 0.01.  -g/--gap_size (Optional)  The minimum length of a \"gap\" such that neighboring window is an \"island.\"\nPlease note that this value must be a multiple of the window size.\nDefault value is 600 (bp).  -e/--e_value (Optional)  E-value. Requires user input when no control library is provided. Default value is 1000  -o/--output_directory (Optional)  Path of the directory in which results will be stored. Default output directory is the current working directory.  -cpu/--cpu (Optional)  The number of CPU cores SICER program will use when executing multi-processing tasks. Optimal number of cores is the species' number of chromosomes. Default value is the maximum number of cores avaiable in the system.  --significant_reads (Optional)  Significant Reads: Type \"--significant_reads\" flag to have SICER produce a BED file of treatment reads filtered by significant islands and WIG file of filtered reads binned into windows.  RECOGNICER Arguments  All of the arguments for RECOGNICER are identical to those of SICER except for  gap_size  and  e_value .\nInstead of these two arguments, RECOGNICER has two arguments called  step_size  and  step_score .  -s_size/--step_size (Optional)  The number of windows in one graining unit. Default value is 3.  -s_score/--step_score (Optional)  The minimum number of positive elements in the graining unit to call the unit positive. Default value is 2.",
            "title": "Using SICER2"
        },
        {
            "location": "/#using-sicer2-for-differential-peak-calling",
            "text": "The commands for differential peak calling are  sicer_df  and  recognicer_df .    Arguments  The arguments for both SICER and RECOGNICER differential peak calling are identical to those of the regular peak callings except for the following arguments specified below.  Also, differential peak calling has one additional argument called  ----false_discovery_rate_df  -t/--treatment_file (Required)  Two files must be given as input. The first file must be the knockout (KO) file and the second file must be the wild-type (WT) file.\nBoth files must either be in BED or BAM format.  -c/--control_file (Optional)  While optional, two files must be given as input if you decide to provide the input. The first file must be the control library corresponding to the knockout (KO) treatment file and the second file must be the control library corresponding to the wild-type (WT) treatment file. Both files must either be in BED or BAM format.  -fdr_df/--false_discovery_rate_df (Optional)  Cutoff for identification of significant changes been wild-type library and knockout library. Default value is 0.01.",
            "title": "Using SICER2 for differential peak calling"
        },
        {
            "location": "/#example-use",
            "text": "Calling SICER with a control library. Default parameters are explicitly entered for the sake of demonstration.   sicer -t treatment.bed -c control.bed -s hg38 -w 200 -rt 1 -f 150 -egf 0.74 -fdr 0.01 -g 600 -e 1000   Calling SICER without a control library   sicer -t treatment.bed -s hg38   Calling SICER with control libraries for differential peak calling.   sicer_df -t treatment1.bed treatment2.bed -c control1.bed control2.bed -s hg38   Calling SICER without control libraries for differential peak calling.   sicer_df -t treatment1.bed treatment2.bed -s hg38",
            "title": "Example Use"
        },
        {
            "location": "/workflow/",
            "text": "Workflow of SICER2\n\n\nSICER and RECOGNICER both share similar workflow, which is the reason why they are included together in SICER2 package.\nBelow is a graphical view of the workflow of SICER2.",
            "title": "Workflow of SICER2"
        },
        {
            "location": "/workflow/#workflow-of-sicer2",
            "text": "SICER and RECOGNICER both share similar workflow, which is the reason why they are included together in SICER2 package.\nBelow is a graphical view of the workflow of SICER2.",
            "title": "Workflow of SICER2"
        },
        {
            "location": "/sicer2_output/",
            "text": "Understanding SICER2 Outputs\n\n\nThis page is to help you understand what the output files of SICER2 are. The number of files that SICER2 generates depends on whether or not control library is used and whether or not \n--significant_reads\n flag was set.\n\n\nSICER Outputs\n\n\nBase Outputs\n\n\n\n\n\n\ntreatment_file-W200-G600.scoreisland\n: this file is delineation of significant islands controlled by E-\nvalue of 1000. It is in \u201cchrom start end score\u201d format. \"W200\" and \"G600\" each respectively represents the window size and gap size parameters.\n\n\n\n\n\n\ntreatment_file-W200-normalized.wig\n: wig file that can be used to visualize the windows generated by SICER2. Read count is normalized by library size per million. \"W200\" reprsents the window sie parameter. \n\n\n\n\n\n\nAdditional outputs when control library is used\n\n\n\n\ntreatment_file-W200-G600-islands-summary\n: summary of all candidate islands with their\nstatistical significance. It has the following format: chrom, start, end, ChIP_island_read_count, CONTROL_island_read_count, p_value, fold_change, FDR_threshold.\n\n\ntreatment_file-W200-G600-FDR0.01-island.bed\n: delineation of significant islands filtered by false discovery rate (FDR). It has the following format: chrom, start, end, read-count. \"FDR0.01\" represents the FDR parameter. \n\n\n\n\nAdditional outputs when \n--significant_reads\n flag is set\n\n\n\n\n\n\ntreatment_file-W200-G600-FDR0.01-islandfiltered.bed\n: library of reads in significant islands determined by SICER. Note that reads have been processed for redundancy.\n\n\n\n\n\n\ntreatment_1-W200-G600-FDR0.01-islandfiltered-normalized.wig\n: wig file of the reads from above file (i.e. island-filtered reads). This file can be uploaded to the UCSC genome browser and be compared with the track for treatment_file-W200-normalized.wig for visual examination of parameter choices and SICER performance.\n\n\n\n\n\n\nRECOGNICER Outputs\n\n\nThe outputs of RECOGNICER are identical to SICER outputs except for one file. Instead of \ntreatment_file-W200-G600.scoreisland\n file, \ntreatment_file-W200-G600.cgisland\n is generated. Also, \"G600\" part is dropped from the name of the files since gap size is not a parameter for RECOGNICER. \n\n\n\n\ntreatment_file-W200.cgisland\n: like the *.scoreisland file produced by SICER, cgisland file is delineation of significant islands discovered using RECOGNICER algorithm. It is in \u201cchrom start end score\u201d format. \"W200\" represents the window size.",
            "title": "Understanding SICER2 Outputs"
        },
        {
            "location": "/sicer2_output/#understanding-sicer2-outputs",
            "text": "This page is to help you understand what the output files of SICER2 are. The number of files that SICER2 generates depends on whether or not control library is used and whether or not  --significant_reads  flag was set.",
            "title": "Understanding SICER2 Outputs"
        },
        {
            "location": "/sicer2_output/#sicer-outputs",
            "text": "Base Outputs    treatment_file-W200-G600.scoreisland : this file is delineation of significant islands controlled by E-\nvalue of 1000. It is in \u201cchrom start end score\u201d format. \"W200\" and \"G600\" each respectively represents the window size and gap size parameters.    treatment_file-W200-normalized.wig : wig file that can be used to visualize the windows generated by SICER2. Read count is normalized by library size per million. \"W200\" reprsents the window sie parameter.     Additional outputs when control library is used   treatment_file-W200-G600-islands-summary : summary of all candidate islands with their\nstatistical significance. It has the following format: chrom, start, end, ChIP_island_read_count, CONTROL_island_read_count, p_value, fold_change, FDR_threshold.  treatment_file-W200-G600-FDR0.01-island.bed : delineation of significant islands filtered by false discovery rate (FDR). It has the following format: chrom, start, end, read-count. \"FDR0.01\" represents the FDR parameter.    Additional outputs when  --significant_reads  flag is set    treatment_file-W200-G600-FDR0.01-islandfiltered.bed : library of reads in significant islands determined by SICER. Note that reads have been processed for redundancy.    treatment_1-W200-G600-FDR0.01-islandfiltered-normalized.wig : wig file of the reads from above file (i.e. island-filtered reads). This file can be uploaded to the UCSC genome browser and be compared with the track for treatment_file-W200-normalized.wig for visual examination of parameter choices and SICER performance.",
            "title": "SICER Outputs"
        },
        {
            "location": "/sicer2_output/#recognicer-outputs",
            "text": "The outputs of RECOGNICER are identical to SICER outputs except for one file. Instead of  treatment_file-W200-G600.scoreisland  file,  treatment_file-W200-G600.cgisland  is generated. Also, \"G600\" part is dropped from the name of the files since gap size is not a parameter for RECOGNICER.    treatment_file-W200.cgisland : like the *.scoreisland file produced by SICER, cgisland file is delineation of significant islands discovered using RECOGNICER algorithm. It is in \u201cchrom start end score\u201d format. \"W200\" represents the window size.",
            "title": "RECOGNICER Outputs"
        },
        {
            "location": "/contact/",
            "text": "Contact\n\n\nFor any questions or comments, please contact Zang Lab at zang@virginia.edu.\n\n\nAlso, link to lab website: \nzanglab",
            "title": "Contact"
        },
        {
            "location": "/contact/#contact",
            "text": "For any questions or comments, please contact Zang Lab at zang@virginia.edu.  Also, link to lab website:  zanglab",
            "title": "Contact"
        }
    ]
}